<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<link rel="stylesheet" href="/luci-static/bootstrap-dark/cascade.css">
		<meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
		<meta http-equiv="Pragma" content="no-cache" />
		<meta http-equiv="Expires" content="0" />
		<meta http-equiv="Expires" content="Thu, 01 Jan 1970 00:00:00 GMT" />
		<style type="text/css">
			@font-face {
				font-family: 'OCR A Std';
				src: local('OCR A Std'), url('/luci-static/bootstrap/OCRAStd.woff') format('woff');
				src: url("//db.onlinewebfonts.com/t/bdc32e3567beb611cbb485b42ba29160.eot");
				src: url("//db.onlinewebfonts.com/t/bdc32e3567beb611cbb485b42ba29160.eot?#iefix") format("embedded-opentype"), url("//db.onlinewebfonts.com/t/bdc32e3567beb611cbb485b42ba29160.woff2") format("woff2"), url("//db.onlinewebfonts.com/t/bdc32e3567beb611cbb485b42ba29160.woff") format("woff"), url("//db.onlinewebfonts.com/t/bdc32e3567beb611cbb485b42ba29160.ttf") format("truetype"), url("//db.onlinewebfonts.com/t/bdc32e3567beb611cbb485b42ba29160.svg#OCR A Std") format("svg");
			}

			:root {
				--focus-color-rgb: 82,196,0;
				--background-image: url(/luci-static/bootstrap/CyberSecurity-Box.png);
				--background-image: url(/luci-static/bootstrap/CyberSecurity-Box.svg);
				--background-head: url(/luci-static/bootstrap/CyberAndi.svg);
				--background-color-delta-l-sign: -1;
				--background-color-h: 0;
				--background-color-s: 0%;
				--background-color-l: 100%;
				--background-color-high-hsl: var(--background-color-h),var(--background-color-s),var(--background-color-l);
				--background-color-high: hsl(var(--background-color-high-hsl));
				--background-color-medium-hsl: var(--background-color-h),var(--background-color-s),calc(var(--background-color-l) + var(--background-color-delta-l-sign) * calc(6 / 255 * 100%));
				--background-color-medium: hsl(var(--background-color-medium-hsl));
				--background-color-low-hsl: var(--background-color-h),var(--background-color-s),calc(var(--background-color-l) + var(--background-color-delta-l-sign) * calc(10 / 255 * 100%));
				--background-color-low: hsl(var(--background-color-low-hsl));
				--text-color-delta-l-sign: 1;
				--text-color-h: 0;
				--text-color-s: 0%;
				--text-color-l: 0%;
				--text-color-highest-hsl: var(--text-color-h),var(--text-color-s),var(--text-color-l);
				--text-color-highest: hsl(var(--text-color-highest-hsl));
				--text-color-high-hsl: var(--text-color-h),var(--text-color-s),calc(var(--text-color-l) + var(--text-color-delta-l-sign) * calc(64 / 255 * 100%));
				--text-color-high: hsl(var(--text-color-high-hsl));
				--text-color-medium-hsl: var(--text-color-h),var(--text-color-s),calc(var(--text-color-l) + var(--text-color-delta-l-sign) * calc(128 / 255 * 100%));
				--text-color-medium: hsl(var(--text-color-medium-hsl));
				--text-color-low-hsl: var(--text-color-h),var(--text-color-s),calc(var(--text-color-l) + var(--text-color-delta-l-sign) * calc(191 / 255 * 100%));
				--text-color-low: hsl(var(--text-color-low-hsl));
				--border-color-delta-l-sign: -1;
				--border-color-h: var(--background-color-h);
				--border-color-s: var(--background-color-s);
				--border-color-l: var(--background-color-l);
				--border-color-high-hsl: var(--border-color-h),var(--border-color-s),calc(var(--border-color-l) + var(--border-color-delta-l-sign) * calc(51 / 255 * 100%));
				--border-color-high: hsl(var(--border-color-high-hsl));
				--border-color-medium-hsl: var(--border-color-h),var(--border-color-s),calc(var(--border-color-l) + var(--border-color-delta-l-sign) * calc(34 / 255 * 100%));
				--border-color-medium: hsl(var(--border-color-medium-hsl));
				--border-color-low-hsl: var(--border-color-h),var(--border-color-s),calc(var(--border-color-l) + var(--border-color-delta-l-sign) * calc(17 / 255 * 100%));
				--border-color-low: hsl(var(--border-color-low-hsl));
				--decofont: "OCR A Std", "OCR-A","OCR-A Std",Terminal,Monaco,Andale Mono,Courier New,Courier,monospace;
				--primary-color-high: #197600;
				--primary-color-medium: #156400;
				--primary-color-low: #0d4600;
				--on-primary-color: var(--background-color-high);
				--error-color-high-rgb: 246,43,18;
				--error-color-high: rgb(var(--error-color-high-rgb));
				--error-color-medium: #e8210d;
				--error-color-low: #d00000;
				--on-error-color: var(--background-color-high);
				--success-color-high-rgb: 0,172,89;
				--success-color-high: rgb(var(--success-color-high-rgb));
				--success-color-medium: #009a4c;
				--success-color-low: #007936;
				--on-success-color: var(--background-color-high);
				--warn-color-high: #efbd0b;
				--warn-color-medium: #f0c629;
				--warn-color-low: #f2d24f;
				--on-warn-color: var(--text-color-highest);
				--disabled-opacity: .7;
				color-scheme: light
			}

			:root[data-darkmode="true"] {
				--background-image: url/luci-static/bootstrap/(CyberSecurity-Box.png);
				--background-image: url(/luci-static/bootstrap/CyberSecurity-Box.svg);
				--background-color-delta-l-sign: 1;
				--background-color-h: 0;
				--background-color-s: 0%;
				--background-color-l: calc(34 / 255 * 100%);
				--text-color-delta-l-sign: -1;
				--text-color-h: 0;
				--text-color-s: 0%;
				--text-color-l: 100%;
				--border-color-delta-l-sign: 1;
				--primary-color-high: #4dc100;
				--primary-color-medium: #44ad00;
				--primary-color-low: #3c7a00;
				--error-color-high-rgb: 209,86,83;
				--error-color-medium: #bf4e4c;
				--error-color-low: #b14946;
				--success-color-high-rgb: 100,166,0;
				--success-color-medium: #009400;
				--success-color-low: #008200;
				--warn-color-high: #a69461;
				--warn-color-medium: #a68d45;
				--warn-color-low: #a68732;
				--on-warn-color: var(--background-color-high);
				--disabled-opacity: .4;
				color-scheme: dark;
			}

			*,::before,::after {
				border: 0;
				box-sizing: border-box;
				margin: 0;
				padding: 0
			}

			abbr[title],acronym[title] {
				border-bottom: 1px dotted;
				font-weight: inherit;
				cursor: help
			}

			table {
				border-collapse: collapse;
				border-spacing: 0
			}

			html {
				font-size: 100%;
				-webkit-text-size-adjust: 100%;
				-ms-text-size-adjust: 100%;
				height: 100%
			}

			a:focus {
				outline: thin dotted
			}

			a:hover,a:active {
				outline: 0
			}

			sub,sup {
				font-size: 75%;
				line-height: 0;
				position: relative;
				vertical-align: baseline
			}

			sup {
				top: -0.5em
			}

			sub {
				bottom: -0.25em
			}

			img {
				-ms-interpolation-mode: bicubic
			}

			button,input,select,option,textarea {
				font-size: 100%;
				box-sizing: border-box;
				vertical-align: baseline;
				line-height: 2em;
				margin: 0
			}

			button, .btn {
				box-shadow: rgba(0,0,0,0.8) 1.3px 1.3px 3.25px !important;
			}

			body.modal-overlay-active #modal_overlay {
				left: 0;
				right: 0;
				opacity: 1;
				visibility: visible;
				overflow-y: hidden;
			}

			#modal_overlay {
				position: fixed;
				top: 0;
				bottom: 0;
				background: rgba(0,0,0,0.7);
				backdrop-filter: blur(3.5px);
				overflow: auto;
				transition: opacity .35s ease-in;
				opacity: 0;
				visibility: hidden;
				z-index: 900;
			}

	    		a { color: #cccccc !important; margin: auto !important; height: 5em !important; align: center !important;
			}

			@media (prefers-color-scheme: dark) {
				body { background: black; }
				a { color: #cccccc !important; margin: auto !important; height: 5em !important; align: center !important;}
			}

			body {
				background-color: #050505;
				background-image: var(--background-image);
				background-repeat: no-repeat;
				background-blend-mode: luminosity;
				background-attachment: fixed;
				background-position: bottom;
				background-size: contain;
				font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
				text-shadow: 0.1em 0.1em 0.25em rgba(0,0,0,0.8);
				font-size: 13px;
				font-weight: 400;
				line-height: 18px;
				color: var(--text-color-high);
				min-height: 100%;
				display: flex;
				flex-direction: column;
				padding: 5px;
			}

			body::before {
				width: 90vw !important;
				overflow: hidden;
			}

			.modal {
				background: unset;
				border: unset;
				box-shadow: unset;
			}

			.bubble-container  {
				filter: drop-shadow(0 0px 8px rgba(var(--focus-color-rgb),0.8));
				opacity: 0.7;
			}

			.bubble-container .bubble {
				--focus-color-rgb: 82,168,0;
				font-family: "OCR A Std";
				font-size: 1.5em !important;
				line-height: 1.2em !important;
				position: relative;
				/*width: 90%;*/
				min-height: 32px;
				min-width: 270px;
				max-width: 600px;
				border-radius: 50%;
				background: rgba(48,48,48,1);
				border: 1px solid transparent;
				padding: .5em;
			}
			
			.bubble a {
				color: rgb(0,164,0) !important;
			}
			
			.bubble-container .bubble .oval {
				opacity: 1 !important;
				border: 2px solid transparent;
				font-style: italic;
				border-radius: 50%;
				min-height: 25vh;
			}

			.bubble::before {
				content: "";
				-moz-transform: rotate(-50deg);
				-o-transform: rotate(-50deg);
				-webkit-transform: rotate(-50deg);
				transform: rotate(-50deg);
				border-style: solid;
				border-width: 80px 20px 0 20px;
				border-color: rgba(48,48,48,1) transparent transparent transparent;
				height: 0px;
				position: absolute;
				bottom: 20px;
				left: 90%;
				width: 0px;
				z-index: -1;
			}

			.bubble-container .bubble .oval center {
				color: rgb(230,230,230) !important;
				margin: 2.5em;
				opacity: 1 !important;
			}

			.bubble-container .bubble .oval center * {
				font-family: inherit;
				text-shadow: inherit;
				line-height: inherit;
			}

			.bubble-container .bubble .oval center *:not(input) {
				color: rgb(230,230,230);
			}
			
			.bubble-container .bubble .oval center input {
				color: rgb(0,0,0);
			}

			.bubble .oval button {	
				font-size: inherit;
				text-shadow: inherit;
				line-height: 1.75em !important;
				background-color: rgba(0,164,0,0.8);
				color: rgba(230,230,230,0.8) !important;
				padding: 0em 0.5em !important;
				border-radius: 0.42em;
				font-style: italic;
			}
			
			.bubble .oval button:hover, .bubble .oval button:active {	
				color: rgb(0,0,0) !important;
			}

			.Messanger {
				display: none;
			}

			.Messanger:first-child {
				visibility: visible;
				display: unset;
			}

			#avatar{

				background-image: var(--background-head) !important;
				filter: drop-shadow( 0.25em 0.25em 0.5em rgba(32,32,32,0.8) );
				height: 80vh;
				width: 80vh;
				background-repeat: no-repeat;
				background-size: cover;
				display: block;
				right: 0px;
				top: 19vh;
				overflow: overlay;
				position: fixed;
				z-index: 900;
			}
			
		</style>
		<script>
			function read_all() {
				read('User');
				read('IP');
				read('Domain');
				read('SSID');
				read('WKey');
				call_install();
				call();
			}

			function next() {
				document.getElementsByClassName('Messanger')[1].style.display='unset';
				document.getElementsByClassName('Messanger')[2].style.display='unset';
				document.getElementsByClassName('Messanger')[3].style.display='unset';
				document.getElementsByClassName('Messanger')[4].style.display='unset';
				document.getElementsByClassName('Messanger')[5].style.display='unset';
				document.getElementById('Hello').style.display='none';
				
			}

			function read(field_id) {
				if (field_id == "" ) {
					alert('Id is missing');
				};
				if (document.getElementById(field_id).value == "") {
					switch (field_id ) {
						case 'Domain':
							vDomain = 'cybersec-box.local' ;
							break;
						case 'IP':
							vIP = '192.168.1.1' ;
							break;
						case 'SSID':
							vSSID = 'CyberSec-Box' ;
							break;
						case 'WKey':
							vWKey = 'Cyber,Sec-8ox' ;
							break;
						case 'User':
							vUser = 'root' ;
							break;
						default:
							alert('Not Found');

					}
					
				} else {
					switch (field_id ) {
						case 'Domain':
							vDomain = document.getElementById(field_id).value ;
							break;
						case 'IP':
							vIP = document.getElementById(field_id).value ;
							break;
						case 'SSID':
							vSSID = document.getElementById(field_id).value ;
							break;
						case 'WKey':
							vWKey = document.getElementById(field_id).value ;
							break;
						case 'User':
							vUser = document.getElementById(field_id).value ;
							break;
						default:
							alert('Not Found');

					}
				};
			}

			function call() {
				alert ('Script started');
				exec('sh wget https://github.com/CyberAndi/CyberSecurity-Box/raw/CyberAndi-Pi-Hole-5/openWRT23_install.sh', function (error, stdout, stderr) {
					if (error) {
						console.error(`Error: ${error}`);
						return;
					}
					console.log(`Output: ${stdout}`);
				});
			}

			function call_script() {
				const { spawn } = require('child_process');

				const script = spawn('sh', ['wget https://github.com/CyberAndi/CyberSecurity-Box/raw/CyberAndi-Pi-Hole-5/openWRT23_install.sh && openWRT23_install.sh']);

				script.stdout.on('data', (data) => {
					document.getElementById('Output').innerHTML="<p>Output: '$(data)'</p>";
					console.log(`Output: ${data}`);
				});

				script.stderr.on('data', (data) => {
					document.getElementById('Output').innerHTML="<p>Error: '$(data)'</p>";
					console.error(`Stderr: ${data}`);
				});

				script.on('close', (code) => {
					document.getElementById('Output').innerHTML="<p>Exit with: '$(data)'</p>";
					console.log(`Script exited with code ${code}`);
				});
			}

			function call_script1() {
				const { exec } = require('child_process');

				exec('bash /path/to/your/script.sh', (error, stdout, stderr) => {
				if (error) {
					document.getElementById('Output').innerHTML="<p>Errors: '$(data)'</p>";
					console.error(`Error: ${error.message}`);
					return;
				}
				if (stderr) {
					document.getElementById('Output').innerHTML="<p>stderr '$(data)'</p>";
					console.error(`Stderr: ${stderr}`);
					return;
				}
					document.getElementById('Output').innerHTML="<p>Output: '$(data)'</p>";
					console.log(`Output: ${stdout}`);
				});
			}
			
			function call_install() {
				document.getElementById('Output').innerHTML='<p>I will use the following settings:<br>' +
				'<p>You can reach the Router under: <a id="lnk" href="https://' + vIP + ':8443/cgi-bin/luci">https://' + vIP + ':8443' + '/cgi-bin/luci/</a></p>' +
				'<p>Please wait till 20 Minutes for the Settings. Then you can log in with ' + vUser + ' and your Password.';
			}
		</script>
	</head>
	<body class="lang_en modal-overlay-active" data-page>
		<div id="modal_overlay">
			
			<div class="modal">
				<div class="bubble-container">
					<div class="bubble">
						<blockquote class="oval">
							<center id="Output">
								<div class="Messanger" id="Hello">
									<p>Hello, my name is @CyberAndi.<br> I will assist you through the router configuration process.
									<button onclick="next()">Next</button>
									</p>
								</div>
							        <div class="Messanger">
									<p>Type the LAN-IP (Internal Network): <input type="text" id="IP" placeholder="192.168.1.1"></input>.
									<!-- <button onclick="read('IP')">Submit</button> -->
									</p>
								</div>
								<div class="Messanger">
									<p>Your local Domain of your LAN? <input type="text" id="Domain" placeholder=".local"></input>.
									<!-- <button onclick="read('Domain')">Submit</button> -->
									</p>
								</div>
								<div class="Messanger">
									<p>The Main-WiFi-SSID? <input type="text" id="SSID" placeholder="CyberSec-Box"></input>.
									<!-- <button onclick="read('SSID')">Submit</button> -->
									</p>
								</div>
								<div class="Messanger">
									<p>And the WiFi-Key? <input type="text" id="WKey" placeholder="Cyber,Sec9ox"></input>.
									<!-- <button onclick="read('WKey')">Submit</button> -->
									</p>
								</div>
								<div class="Messanger">
									<p>At least the user for the login:? <input type="text" id="User" placeholder="root"></input>.
									<button onclick="read_all()">Submit</button>
									</p>
								</div>
							</center> 
						</blockquote>
					</div>
				</div>				
			</div>
			<div id="avatar">
			</div>
		</div>
	</body>
</html>
